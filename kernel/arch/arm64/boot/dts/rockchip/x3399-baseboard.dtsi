/*
 * Copyright (c) 2016 Fuzhou Rockchip Electronics Co., Ltd
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

#include <dt-bindings/sensor-dev.h>
#include <dt-bindings/pwm/pwm.h>
#include "x3399-core.dtsi"

/ {
	compatible = "9tripod,x3399-baseboard", "rockchip,rk3399";

	rt5651-sound {
		compatible = "simple-audio-card";
		simple-audio-card,format = "i2s";
		simple-audio-card,name = "realtek,rt5651-codec";
		simple-audio-card,mclk-fs = <256>;
		simple-audio-card,widgets =
			"Microphone", "Mic Jack",
			"Headphone", "Headphone Jack";
		simple-audio-card,routing =
			"Mic Jack", "MICBIAS1",
			"IN1P", "Mic Jack",
			"Headphone Jack", "HPOL",
			"Headphone Jack", "HPOR";
		simple-audio-card,cpu {
			sound-dai = <&i2s0>;
		};
		simple-audio-card,codec {
			sound-dai = <&rt5651>;
		};
	};

	spdif-sound {
		status = "okay";
		compatible = "simple-audio-card";
		simple-audio-card,name = "ROCKCHIP,SPDIF";
		simple-audio-card,cpu {
			sound-dai = <&spdif>;
		};
		simple-audio-card,codec {
			sound-dai = <&spdif_out>;
		};
	};

	spdif_out: spdif-out {
		status = "okay";
		compatible = "linux,spdif-dit";
		#sound-dai-cells = <0>;
	};

	dw_hdmi_audio: dw-hdmi-audio {
		status = "disabled";
		compatible = "rockchip,dw-hdmi-audio";
		#sound-dai-cells = <0>;
	};

	hdmi_sound: hdmi-sound {
		status = "disabled";
		compatible = "simple-audio-card";
		simple-audio-card,format = "i2s";
		simple-audio-card,mclk-fs = <256>;
		simple-audio-card,name = "rockchip,hdmi";

		simple-audio-card,cpu {
			sound-dai = <&i2s2>;
		};
		simple-audio-card,codec {
			sound-dai = <&hdmi>;
		};
	};

	sdio_pwrseq: sdio-pwrseq {
		compatible = "mmc-pwrseq-simple";
		clocks = <&rk808 1>;
		clock-names = "ext_clock";
		pinctrl-names = "default";
		pinctrl-0 = <&wifi_enable_h>;

		/*
		 * On the module itself this is one of these (depending
		 * on the actual card populated):
		 * - SDIO_RESET_L_WL_REG_ON
		 * - PDN (power down when low)
		 */
		reset-gpios = <&gpio0 10 GPIO_ACTIVE_LOW>; /* GPIO0_B2 */
	};

	wireless-wlan {
		compatible = "wlan-platdata";
		rockchip,grf = <&grf>;
		wifi_chip_type = "ap6354";
		sdio_vref = <1800>;
		WIFI,host_wake_irq = <&gpio0 3 GPIO_ACTIVE_HIGH>; /* GPIO0_a3 */
		status = "okay";
	};

	wireless-bluetooth {
		compatible = "bluetooth-platdata";
		clocks = <&rk808 1>;
		clock-names = "ext_clock";
		//wifi-bt-power-toggle;
		uart_rts_gpios = <&gpio2 19 GPIO_ACTIVE_LOW>; /* GPIO2_C3 */
		pinctrl-names = "default", "rts_gpio";
		pinctrl-0 = <&uart0_rts>;
		pinctrl-1 = <&uart0_gpios>;
		//BT,power_gpio  = <&gpio3 19 GPIO_ACTIVE_HIGH>; /* GPIOx_xx */
		BT,reset_gpio    = <&gpio0 9 GPIO_ACTIVE_HIGH>; /* GPIO0_B1 */
		BT,wake_gpio     = <&gpio2 26 GPIO_ACTIVE_HIGH>; /* GPIO2_D2 */
		BT,wake_host_irq = <&gpio0 4 GPIO_ACTIVE_HIGH>; /* GPIO0_A4 */
		status = "okay";
	};
	
	hall_sensor: hall-mh248 {
		compatible = "hall-mh248";
		pinctrl-names = "default";
		pinctrl-0 = <&mh248_irq_gpio>;
		irq-gpio = <&gpio0 13 IRQ_TYPE_EDGE_BOTH>;
		hall-active = <1>;
		status = "disabled";
	};

	rockchip_headset {
		compatible = "rockchip_headset";
		pinctrl-names = "default";
		pinctrl-0 = <&headset_gpio>;
		headset_gpio = <&gpio4 28 GPIO_ACTIVE_LOW>;
		rockchip,headset_wakeup = <0>;
		status = "okay";
	};

	leds {
		compatible = "gpio-leds";

		led@1 {
			pinctrl-names = "default";
			pinctrl-0 = <&led1_ctl>;
			label = "led1";
			gpios = <&gpio1 23 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "heartbeat";
			default-state = "off";
		};
		
		led@2 {
			pinctrl-names = "default";
			pinctrl-0 = <&led2_ctl>;
			label = "led2";
			gpios = <&gpio0 12 GPIO_ACTIVE_LOW>;
			default-state = "off";
		};

		led@3 {
			pinctrl-names = "default";
			pinctrl-0 = <&led3_ctl>;
			label = "led3";
			gpios = <&gpio1 1 GPIO_ACTIVE_LOW>;
			default-state = "off";
		};
		
		led@4 {
			pinctrl-names = "default";
			pinctrl-0 = <&led4_ctl>;
			label = "led4";
			gpios = <&gpio0 8 GPIO_ACTIVE_LOW>;
			default-state = "off";
		};
	};
	
	xgpio_beep {
		compatible = "9tripod,xgpio";
		pinctrl-names = "default";
		pinctrl-0 = <&beep_gpio>;
		gpio = <&gpio4 22 GPIO_ACTIVE_HIGH>;
		status = "okay";
	};
	
	xgpio_fan {
		compatible = "9tripod,xgpio";
		pinctrl-names = "default";
		pinctrl-0 = <&fan_gpio>;
		gpio = <&gpio4 5 GPIO_ACTIVE_HIGH>;
		status = "okay";
	};
};

&spdif {
	status = "okay";
	pinctrl-0 = <&spdif_bus>;
	i2c-scl-rising-time-ns = <450>;
	i2c-scl-falling-time-ns = <15>;
	#sound-dai-cells = <0>;
};

&i2c1 {
	status = "okay";
	i2c-scl-rising-time-ns = <300>;
	i2c-scl-falling-time-ns = <15>;

	rt5651: rt5651@1a {
		#sound-dai-cells = <0>;
		compatible = "realtek,rt5651";
		reg = <0x1a>;
		clocks = <&cru SCLK_I2S_8CH_OUT>;
		clock-names = "mclk";
		spk-con-gpio = <&gpio0 11 GPIO_ACTIVE_HIGH>;
	};
};

&i2c3 {
	status = "okay";
	i2c-scl-rising-time-ns = <300>;
	i2c-scl-falling-time-ns = <15>;
	clock-frequency = <10000>;

	xic@20 {
		compatible = "9tripod,xic";
		reg = <0x20>;
	};
};

&i2c4 {
	status = "okay";
	i2c-scl-rising-time-ns = <600>;
	i2c-scl-falling-time-ns = <20>;
	clock-frequency = <400000>;

	lsm330_accel@1e {
		status = "okay";
		compatible = "lsm330_acc";
		pinctrl-names = "default";
		pinctrl-0 = <&lsm330a_irq_gpio>;
		reg = <0x1e>;
		irq-gpio = <&gpio1 22 IRQ_TYPE_EDGE_RISING>;
		type = <SENSOR_TYPE_ACCEL>;
		irq_enable = <0>;
		poll_delay_ms = <30>;
		layout = <4>;
	};

	lsm330_gyro@6a {
		status = "okay";
		compatible = "lsm330_gyro";
		pinctrl-names = "default";
		pinctrl-0 = <&lsm330g_irq_gpio>;
		reg = <0x6a>;
		irq-gpio = <&gpio1 24 IRQ_TYPE_EDGE_RISING>;
		type = <SENSOR_TYPE_GYROSCOPE>;
		irq_enable = <0>;
		poll_delay_ms = <30>;
	};
	
	sensor@0f {
		status = "okay";
		compatible = "ak8963";
		pinctrl-names = "default";
		pinctrl-0 = <&ak8963_irq_gpio>;
		reg = <0x0f>;
		type = <SENSOR_TYPE_COMPASS>;
		irq-gpio = <&gpio1 0 IRQ_TYPE_EDGE_RISING>;
		irq_enable = <0>;
		poll_delay_ms = <30>;
		layout = <3>;
	};

	sensor@10 {
		status = "okay";
		compatible = "capella,light_cm3218";
		pinctrl-names = "default";
		pinctrl-0 = <&cm3218_irq_gpio>;
		reg = <0x10>;
		type = <SENSOR_TYPE_LIGHT>;
		irq-gpio = <&gpio4 24 IRQ_TYPE_EDGE_FALLING>;
		irq_enable = <1>;
		poll_delay_ms = <30>;
	};
};

&uart0 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart0_xfer &uart0_cts>;
	status = "okay";
};

&uart2 {
	status = "okay";
};

&uart4 {
	status = "okay";
};

&rockchip_suspend {
	status = "okay";
	rockchip,sleep-debug-en = <0>;
	rockchip,sleep-mode-config = <
		(0
		| RKPM_SLP_ARMPD
		| RKPM_SLP_PERILPPD
		| RKPM_SLP_DDR_RET
		| RKPM_SLP_PLLPD
		| RKPM_SLP_CENTER_PD
		| RKPM_SLP_AP_PWROFF
		)
		>;
	rockchip,wakeup-config = <
		(0
		| RKPM_GPIO_WKUP_EN
		)
		>;
		rockchip,pwm-regulator-config = <
		(0
		| PWM2_REGULATOR_EN
		)
		>;
		rockchip,power-ctrl =
		<&gpio1 17 GPIO_ACTIVE_HIGH>,
		<&gpio1 14 GPIO_ACTIVE_HIGH>;
};

&pinctrl {
	sdio-pwrseq {
		wifi_enable_h: wifi-enable-h {
			rockchip,pins =
				<0 10 RK_FUNC_GPIO &pcfg_pull_none>;
		};
	};

	wireless-bluetooth {
		uart0_gpios: uart0-gpios {
			rockchip,pins =
				<2 19 RK_FUNC_GPIO &pcfg_pull_none>;
		};
	};

	lsm330_a {
		lsm330a_irq_gpio: lsm330a-irq-gpio {
			rockchip,pins = <1 22 RK_FUNC_GPIO &pcfg_pull_none>;
		};
	};

	lsm330_g {
		lsm330g_irq_gpio: lsm330g-irq-gpio {
			rockchip,pins = <1 24 RK_FUNC_GPIO &pcfg_pull_none>;
		};
	};

	ak8963 {
		ak8963_irq_gpio: ak8963-irq-gpio {
			rockchip,pins = <1 0 RK_FUNC_GPIO &pcfg_pull_none>;
		};
	};

	cm3218 {
		cm3218_irq_gpio: cm3218-irq-gpio {
			rockchip,pins = <4 24 RK_FUNC_GPIO &pcfg_pull_up>;
		};
	};

	hallsensor {
		mh248_irq_gpio: mh248-irq-gpio {
			rockchip,pins = <0 13 RK_FUNC_GPIO &pcfg_pull_none>;
		};
	};
	
	rockchip_headset {
		headset_gpio: headset-gpio {
			rockchip,pins = <4 28 RK_FUNC_GPIO &pcfg_pull_none>;
		};
	};
	
	leds {
		led1_ctl: led1-ctl {
			rockchip,pins = <1 23 RK_FUNC_GPIO &pcfg_pull_up>;
		};
		led2_ctl: led2-ctl {
			rockchip,pins = <0 12 RK_FUNC_GPIO &pcfg_pull_up>;
		};
		led3_ctl: led3-ctl {
			rockchip,pins = <1 1 RK_FUNC_GPIO &pcfg_pull_up>;
		};
		led4_ctl: led4-ctl {
			rockchip,pins = <0 8 RK_FUNC_GPIO &pcfg_pull_up>;
		};
	};

	xgpio_beep {
		beep_gpio: beep-gpio {
			rockchip,pins = <4 22 RK_FUNC_GPIO &pcfg_pull_up>;
		};
	};
	
	xgpio_fan {
		fan_gpio: fan-gpio {
			rockchip,pins = <4 5 RK_FUNC_GPIO &pcfg_pull_up>;
		};
	};
};
